$date
	Thu Mar 06 17:32:11 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_instruction_fetch $end
$var wire 5 ! rs2 [4:0] $end
$var wire 5 " rs1 [4:0] $end
$var wire 5 # rd [4:0] $end
$var wire 8 $ pc_out [7:0] $end
$var wire 8 % pc [7:0] $end
$var wire 8 & next_pc [7:0] $end
$var wire 32 ' instruction_out [31:0] $end
$var wire 32 ( instruction [31:0] $end
$var wire 7 ) ctrl [6:0] $end
$var reg 1 * branch $end
$var reg 8 + branch_target [7:0] $end
$var reg 1 , clk $end
$var reg 1 - zero_flag $end
$scope module if_id_reg $end
$var wire 1 , clk $end
$var wire 7 . ctrl [6:0] $end
$var wire 5 / rd [4:0] $end
$var wire 5 0 rs1 [4:0] $end
$var wire 5 1 rs2 [4:0] $end
$var wire 8 2 pc_in [7:0] $end
$var wire 32 3 instruction_in [31:0] $end
$var reg 7 4 ctrl_reg [6:0] $end
$var reg 32 5 instruction_out [31:0] $end
$var reg 8 6 pc_out [7:0] $end
$var reg 5 7 rd_reg [4:0] $end
$var reg 5 8 rs1_reg [4:0] $end
$var reg 5 9 rs2_reg [4:0] $end
$upscope $end
$scope module inst_mem $end
$var wire 32 : instruction [31:0] $end
$var wire 8 ; curr_addr [7:0] $end
$upscope $end
$scope module pc_adder $end
$var wire 1 < PCsrc $end
$var wire 1 * branch $end
$var wire 8 = branch_target [7:0] $end
$var wire 1 - zero_flag $end
$var wire 8 > pc_plus_4 [7:0] $end
$var wire 8 ? curr_addr [7:0] $end
$var wire 8 @ address_out [7:0] $end
$scope module add_inst $end
$var wire 8 A rs2 [7:0] $end
$var wire 8 B rs1 [7:0] $end
$var wire 8 C rd [7:0] $end
$var wire 9 D carry [8:0] $end
$scope begin genblk1[0] $end
$var parameter 2 E i $end
$scope module fa1_inst $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H c $end
$var wire 1 I carry $end
$var wire 1 J d $end
$var wire 1 K e $end
$var wire 1 L f $end
$var wire 1 M sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 N i $end
$scope module fa1_inst $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q c $end
$var wire 1 R carry $end
$var wire 1 S d $end
$var wire 1 T e $end
$var wire 1 U f $end
$var wire 1 V sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 W i $end
$scope module fa1_inst $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z c $end
$var wire 1 [ carry $end
$var wire 1 \ d $end
$var wire 1 ] e $end
$var wire 1 ^ f $end
$var wire 1 _ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 ` i $end
$scope module fa1_inst $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c c $end
$var wire 1 d carry $end
$var wire 1 e d $end
$var wire 1 f e $end
$var wire 1 g f $end
$var wire 1 h sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 i i $end
$scope module fa1_inst $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l c $end
$var wire 1 m carry $end
$var wire 1 n d $end
$var wire 1 o e $end
$var wire 1 p f $end
$var wire 1 q sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 r i $end
$scope module fa1_inst $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u c $end
$var wire 1 v carry $end
$var wire 1 w d $end
$var wire 1 x e $end
$var wire 1 y f $end
$var wire 1 z sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 { i $end
$scope module fa1_inst $end
$var wire 1 | a $end
$var wire 1 } b $end
$var wire 1 ~ c $end
$var wire 1 !" carry $end
$var wire 1 "" d $end
$var wire 1 #" e $end
$var wire 1 $" f $end
$var wire 1 %" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 &" i $end
$scope module fa1_inst $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 )" c $end
$var wire 1 *" carry $end
$var wire 1 +" d $end
$var wire 1 ," e $end
$var wire 1 -" f $end
$var wire 1 ." sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_inst $end
$var wire 1 , clk $end
$var wire 8 /" curr_addr [7:0] $end
$var wire 8 0" next_addr [7:0] $end
$var reg 8 1" PC [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 &"
b110 {
b101 r
b100 i
b11 `
b10 W
b1 N
b0 E
$end
#0
$dumpvars
b11111100 1"
b0 0"
b11111100 /"
0."
1-"
0,"
0+"
1*"
1)"
0("
1'"
0%"
1$"
0#"
0""
1!"
1~
0}
1|
0z
1y
0x
0w
1v
1u
0t
1s
0q
1p
0o
0n
1m
1l
0k
1j
0h
1g
0f
0e
1d
1c
0b
1a
0_
0^
0]
1\
1[
0Z
1Y
1X
0V
0U
0T
0S
0R
0Q
0P
0O
0M
0L
0K
0J
0I
0H
0G
0F
b111111000 D
b0 C
b11111100 B
b100 A
b0 @
b11111100 ?
b0 >
b0 =
0<
b11111100 ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
b11111100 2
bx 1
bx 0
bx /
bx .
0-
0,
b0 +
0*
bx )
bx (
bx '
b0 &
b11111100 %
bx $
bx #
bx "
bx !
$end
#5
0)"
0~
0u
0l
0c
0*"
0!"
0v
0m
0d
b100 &
b100 @
b100 0"
b0 D
0[
0."
0-"
0%"
0$"
0z
0y
0q
0p
0h
0g
b100 >
b100 C
1_
0\
0'"
0|
0s
0j
0a
0X
b1000000000000010010011 (
b1000000000000010010011 3
b1000000000000010010011 :
b0 %
b0 2
b0 ;
b0 ?
b0 B
b0 /"
b0 1"
b11111100 $
b11111100 6
1,
#10
0,
#15
1h
1c
b1000 &
b1000 @
b1000 0"
b1000 D
1[
b1000 >
b1000 C
0_
1\
1X
b10 !
b10 1
b10 9
b0 "
b0 0
b0 8
b1 #
b1 /
b1 7
b10011 )
b10011 .
b10011 4
b0 $
b0 6
b1000000000000010010011 '
b1000000000000010010011 5
b100000000000100010011 (
b100000000000100010011 3
b100000000000100010011 :
b100 %
b100 2
b100 ;
b100 ?
b100 B
b100 /"
b100 1"
1,
#20
0,
#25
0q
0l
0c
0d
b1100 &
b1100 @
b1100 0"
b0 D
0[
1h
0g
b1100 >
b1100 C
1_
0\
1a
0X
b1100000000000110010011 (
b1100000000000110010011 3
b1100000000000110010011 :
b1000 %
b1000 2
b1000 ;
b1000 ?
b1000 B
b1000 /"
b1000 1"
b1 !
b1 1
b1 9
b10 #
b10 /
b10 7
b100 $
b100 6
b100000000000100010011 '
b100000000000100010011 5
1,
#30
0,
#35
1q
1l
1d
0h
1g
1c
b10000 &
b10000 @
b10000 0"
b11000 D
1[
b10000 >
b10000 C
0_
1\
1X
b11 !
b11 1
b11 9
b11 #
b11 /
b11 7
b1000 $
b1000 6
b1100000000000110010011 '
b1100000000000110010011 5
b100101011000000100011 (
b100101011000000100011 3
b100101011000000100011 :
b1100 %
b1100 2
b1100 ;
b1100 ?
b1100 B
b1100 /"
b1100 1"
1,
#40
0,
#45
0z
0u
0l
0c
0m
0d
b10100 &
b10100 @
b10100 0"
b0 D
0[
1q
0p
0h
0g
b10100 >
b10100 C
1_
0\
1j
0a
0X
b1000101011010000100011 (
b1000101011010000100011 3
b1000101011010000100011 :
b10000 %
b10000 2
b10000 ;
b10000 ?
b10000 B
b10000 /"
b10000 1"
b1 !
b1 1
b1 9
b101 "
b101 0
b101 8
b0 #
b0 /
b0 7
b100011 )
b100011 .
b100011 4
b1100 $
b1100 6
b100101011000000100011 '
b100101011000000100011 5
1,
#50
0,
#55
1h
1c
b11000 &
b11000 @
b11000 0"
b1000 D
1[
b11000 >
b11000 C
0_
1\
1X
b10 !
b10 1
b10 9
b1000 #
b1000 /
b1000 7
b10000 $
b10000 6
b1000101011010000100011 '
b1000101011010000100011 5
b101011001000000011 (
b101011001000000011 3
b101011001000000011 :
b10100 %
b10100 2
b10100 ;
b10100 ?
b10100 B
b10100 /"
b10100 1"
1,
#60
0,
#65
0z
0u
0m
1q
0p
0l
0c
0d
b11100 &
b11100 @
b11100 0"
b0 D
0[
1h
0g
b11100 >
b11100 C
1_
0\
1a
0X
b100000101011001100000011 (
b100000101011001100000011 3
b100000101011001100000011 :
b11000 %
b11000 2
b11000 ;
b11000 ?
b11000 B
b11000 /"
b11000 1"
b0 !
b0 1
b0 9
b100 #
b100 /
b100 7
b11 )
b11 .
b11 4
b10100 $
b10100 6
b101011001000000011 '
b101011001000000011 5
1,
#70
0,
#75
1z
1u
1m
0q
1p
1l
1d
0h
1g
1c
b100000 &
b100000 @
b100000 0"
b111000 D
1[
b100000 >
b100000 C
0_
1\
1X
b1000 !
b1000 1
b1000 9
b110 #
b110 /
b110 7
b11000 $
b11000 6
b100000101011001100000011 '
b100000101011001100000011 5
b11000100000001110110011 (
b11000100000001110110011 3
b11000100000001110110011 :
b11100 %
b11100 2
b11100 ;
b11100 ?
b11100 B
b11100 /"
b11100 1"
1,
#80
0,
#85
0%"
0~
0u
0l
0c
0v
0m
0d
b100100 &
b100100 @
b100100 0"
b0 D
0[
1z
0y
0q
0p
0h
0g
b100100 >
b100100 C
1_
0\
1s
0j
0a
0X
b1000000011000100000010000110011 (
b1000000011000100000010000110011 3
b1000000011000100000010000110011 :
b100000 %
b100000 2
b100000 ;
b100000 ?
b100000 B
b100000 /"
b100000 1"
b110 !
b110 1
b110 9
b100 "
b100 0
b100 8
b111 #
b111 /
b111 7
b110011 )
b110011 .
b110011 4
b11100 $
b11100 6
b11000100000001110110011 '
b11000100000001110110011 5
1,
#90
0,
#95
1h
1c
b101000 &
b101000 @
b101000 0"
b1000 D
1[
b101000 >
b101000 C
0_
1\
1X
b1000 #
b1000 /
b1000 7
b100000 $
b100000 6
b1000000011000100000010000110011 '
b1000000011000100000010000110011 5
b11000100111010010110011 (
b11000100111010010110011 3
b11000100111010010110011 :
b100100 %
b100100 2
b100100 ;
b100100 ?
b100100 B
b100100 /"
b100100 1"
1,
#100
0,
