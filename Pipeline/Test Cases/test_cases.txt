addi x1, x0, 10
addi x2, x0, 0
addi x3, x0, 1
add x2, x2, x3
add x3, x2, x3
addi x1, x1, -1
beq x1, x0, 6
beq x0, x0, -8
addi x5, x0, 99
addi x6, x0, 5
ld x7, 0(x6)
addi x7, x7, 1
beq x7, x0, 12
addi x8, x0, 1
addi x9, x0, 1
beq x8, x9, 4
addi x10, x0, 50
addi x11, x0, 1
addi x13, x0, 2
addi x31, x0, 1




# Iterative sum (replaces factorial since mul isn't available)
addi x1, x0, 5        # Sum numbers from 1 to 5
addi x2, x0, 0        # Initialize result to 0
addi x3, x0, 1        # Counter starting at 1
add x2, x2, x3        # Add counter to result and looping starts here
addi x3, x3, 1        # Increment counter
sub x4, x1, x3        # Calculate x1 - x3
addi x4, x4, 1        # Adjust comparison
beq x4, x0, 4         # If counter > limit, exit
beq x0, x0, -10       # Else continue loop
addi x10, x0 ,0



# Even/odd checker for numbers 1-5
addi x1, x0, 1        # Start with 1
addi x2, x0, 5        # End at 5
addi x3, x0, 0        # Current number
addi x4, x0, 0        # Even count
addi x5, x0, 0        # Odd count
addi x3, x3, 1        # Increment number eve odd loop
addi x6, x3, 0        # Copy to x6
andi x6, x6, 1        # Check least significant bit
beq x6, x0, 4         # If LSB is 0, number is even
addi x5, x5, 1        # Increment odd count
beq x0, x0, 4         # Continue to next number
addi x4, x4, 1        # Increment even count
sub x6, x2, x3        # Check if we've reached the end
beq x6, x0, 4         # If counter == limit, exit
beq x0, x0, -16 52    # Else continue loop
addi x11, x0, 0       #exit condition
